@using ProjectManagementApplication.Models
@model Board

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-md-6">
        <div class="form-horizontal">
            <h4>Board</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.BoardId)
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BoardType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.BoardType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BoardType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.User, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>

            <div>
                @Html.ActionLink("Delete board", "Delete", new { id = Model.BoardId }, new { @class = "btn btn-danger" })
                @Html.ActionLink("Back to Board", "Details", new { id = Model.BoardId },new {@class="btn btn-info"})

            </div>
        </div>
    </div>
    <div class="col-md-6">
        @if (Model.BoardType == BoardType.Team)
        {
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.User.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User.Email)
                    </th>
                    <th>Remove</th>
                </tr>
                @foreach (User member in ViewBag.TeamMembers)
                {
                    <tr>
                        <td>@member.Name</td>
                        <td>@member.Email</td>
                        <td>@Html.ActionLink("Remove member", "RemoveTeamMember", "TeamMembers", new { memberId = member.UserId, boardId = Model.BoardId }, null)</td>
                    </tr>
                }
            </table>
            @Html.ActionLink("Add members to the board", "AddTeamMember", "TeamMembers", new { id = Model.BoardId }, null)
        }
    </div>
}
