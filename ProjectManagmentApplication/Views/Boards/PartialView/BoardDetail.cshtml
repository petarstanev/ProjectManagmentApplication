@using ProjectManagementApplication.Models
@model ProjectManagementApplication.Models.Board

<div id="board-column" class="col-md-7">
    <span>TEST</span>
    @foreach (Column column in Model.Columns)
    {
        <div id="column_@column.ColumnId" class="col-md-4 column">
            <h3 class="text-center">
                @Html.ActionLink(column.Title, "Edit", "Columns", new { id = column.ColumnId }, null)
            </h3>
            @foreach (Task task in column.Tasks)
            {
                <div id="task_@task.TaskId" class="well task-container">
                    <div class="task-header">
                        @Html.ActionLink(task.Title, "Details", "Tasks", new { id = task.TaskId }, null)
                    </div>
                    <div class="task-content">
                        @task.Description
                    </div>
                </div>
            }
            <a class="add-column-btn btn btn-block btn-primary btn-sm" href="@Url.Action("Create", "Tasks", new {columnId = column.ColumnId})">
                Add task
            </a>
        </div>
    }
    <div class="col-md-4">
        <h3 class="text-center">
            @Html.ActionLink("Add Column", "Create", "Columns", new { boardId = Model.BoardId }, null)
        </h3>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $(".column")
            .sortable({
                connectWith: ".column",
                cancel: ".add-column-btn",
                start: function (event, ui) {
                    ui.item.addClass('task-moving');
                },
                stop: function (event, ui) {
                    ui.item.removeClass("task-moving");
                },
                receive: function (event, ui) {
                    var taskId = ui.item[0].id.replace(/^\D+/g, '');//get id number from id
                    var columnId = this.id.replace(/^\D+/g, '');

                    $.ajax({
                        url: '/Tasks/ChangeTaskColumn',
                        type: "POST",
                        data: { taskId: taskId, columnId: columnId },
                        statusCode: {
                            400: function (data) {
                                console.log('Opps an error occurred.');
                            }
                        }
                    });
                }
            });
    });
</script>