@using ProjectManagementApplication.Models
@model Board


@foreach (var column in Model.Columns)
{
    <div id="column_@column.ColumnId" class="col-md-2 board-column">
        <h3 class="text-center">
            @Html.ActionLink(column.Title, "Edit", "Columns", new { id = column.ColumnId }, null)
        </h3>
        @foreach (Task task in column.Tasks)
        {
            <div id="task_@task.TaskId" class="well task-container">
                <div class="task-header">
                    <div class="task-header" data-toggle="modal" data-target="#task-modal-@task.TaskId">@task.Title</div>
                    @*@Html.ActionLink(task.Title, "Details", "Tasks", new {id = task.TaskId}, null)*@
                </div>
                <div class="task-content">
                    @task.Description
                </div>
            </div>
                <!-- Modal -->
            <div class="modal fade" id="task-modal-@task.TaskId" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">@task.Title</h4>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <label class="col-sm-2 ">Description</label>
                                <div class="col-sm-10">@task.Description</div>
                            </div>
                            <div class="row">
                                <label class="col-sm-2 ">Deadline</label>
                                <div class="col-sm-10">@task.Deadline</div>
                            </div>
                            <div class="row">
                                <label class="col-sm-2 ">CreatedBy</label>
                                <div class="col-sm-10">@task.CreatedBy</div>
                            </div>
                            <div class="row">
                                <label class="col-sm-2 ">AssignedTo</label>
                                <div class="col-sm-10">@task.AssignedTo</div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <a class="btn btn-info" href="@Url.Action("Details", "Tasks", new {id = task.TaskId})">
                                Details
                            </a>
                            <a class="btn btn-warning" href="@Url.Action("Edit", "Tasks", new {id = task.TaskId})">
                                Edit
                            </a>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}


<script type="text/javascript">
    $(document).ready(function () {
        var hub = $.connection.boardHub;
        $.connection.hub.start().done(function () {
            $(".board-column")
                .sortable({
                    connectWith: ".board-column",
                    cancel: ".add-column-btn",
                    start: function (event, ui) {
                        ui.item.addClass('task-moving');
                    },
                    stop: function (event, ui) {
                        ui.item.removeClass("task-moving");
                    },
                    receive: function (event, ui) {
                        var taskId = ui.item[0].id.replace(/^\D+/g, '');//get id number from id
                        var columnId = this.id.replace(/^\D+/g, '');
                        if (columnId > 0 && taskId > 0) {
                            $.ajax({
                                url: '/Tasks/ChangeTaskColumn',
                                type: "POST",
                                data: { taskId: taskId, columnId: columnId },
                                statusCode: {
                                    400: function (data) {
                                        console.log('Opps an error occurred.');
                                    },
                                    200: function (data) {
                                        var boardId = $("#board-id").val();
                                        hub.server.boardUpdated(boardId);

                                        console.log("send");
                                    }
                                }
                            });
                        } else {
                            console.log(columnId + " " + taskId + " " + this.id);
                        }
                    }
                });
        });

        $(".modal").on('show.bs.modal', function () {
            $(".board-column").sortable("disable");
        });

        $("#myModal").on('hide.bs.modal', function () {
            $(".board-column").sortable("enable");
        });
    });
</script>